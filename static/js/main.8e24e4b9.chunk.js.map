{"version":3,"sources":["components/ProductsContext.js","utils/cart.js","components/products/productsStyles.js","components/products/index.js","components/products/productsList.js","components/PayPal.js","components/cart/cartStyles.js","components/cart/index.js","components/cart/cartList.js","components/withDataLoading.js","components/useModal.js","app.js","index.js"],"names":["ProductsContext","createContext","ProductsProvider","props","useState","loading","products","appState","setAppState","useEffect","axios","get","then","productsList","data","Provider","value","children","getCart","cart","JSON","parse","localStorage","getItem","cartTotal","length","cartItems","forEach","obj","price","quantity","clearCart","removeItem","ProductCard","styled","div","ProductImg","img","attrs","src","width","ProductDetails","Title","p","AddToCartButton","button","margin","color","fontSize","Product","product","toggle","handleCartButton","cartItemToAdd","some","cartItem","id","find","setItem","stringify","addItemToCart","image","title","onClick","ProductDisplay","Products","useContext","map","ReactPayPal","React","paid","setPaid","error","paypalRef","useRef","console","log","window","paypal","Buttons","createOrder","actions","order","create","intent","purchase_units","description","amount","currency_code","onApprove","a","capture","onError","err","render","current","style","zIndex","display","flexDirection","justifyContent","alignItems","ref","Wrapper","Modal","CloseButton","ClearCartBtn","TopRow","PriceTag","CheckoutBtn","EmptyCart","CartCard","CartImg","LeftSideCartBox","QuantityChanger","QuantityOperator","Price","RemoveItemIcon","Cart","handleRemove","handleCartChange","count","setcount","item","decreaseQuantity","increaseQuantity","stripePromise","loadStripe","process","CartList","isShown","hide","setcart","checkout","setCheckout","handleStripeBtnClick","stripe","post","response","session","alert","redirectToCheckout","sessionId","index","findIndex","splice","removeFromCart","marginBottom","LoadingMessage","WithDataLoading","Component","isLoading","useModal","setIsShown","CartIcon","App","ProductsLoading","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e24e4b9.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const ProductsContext = createContext()\r\n\r\nexport const ProductsProvider = (props) => {\r\n\tconst [appState, setAppState] = useState({\r\n\t\tloading: false,\r\n\t\tproducts: null,\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tsetAppState({ loading: true })\r\n\t\tconst api = `https://fakestoreapi.com/products`\r\n\r\n\t\taxios.get(api).then((productsList) => {\r\n\t\t\tsetAppState({ loading: false, products: productsList.data })\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<ProductsContext.Provider value={[appState, setAppState]}>{props.children}</ProductsContext.Provider>\r\n\t)\r\n}\r\n","export const getCart = () => {\r\n\tlet cart = JSON.parse(localStorage.getItem('cart') || '[]')\r\n\r\n\tlet cartTotal = 0\r\n\r\n\tif (cart.length > 0) {\r\n\t\tconst cartItems = [...cart]\r\n\r\n\t\tcartItems.forEach((obj) => {\r\n\t\t\tcartTotal += obj.price * obj.quantity\r\n\t\t})\r\n\r\n\t\treturn {\r\n\t\t\tcartItems,\r\n\t\t\tcartTotal,\r\n\t\t}\r\n\t} else {\r\n\t\treturn { cartItems: [], cartTotal }\r\n\t}\r\n}\r\n\r\nexport const addItemToCart = (cartItemToAdd) => {\r\n\tlet cart = JSON.parse(localStorage.getItem('cart') || '[]')\r\n\r\n\tlet existingCartItem = cart.some((cartItem) => cartItem.id === cartItemToAdd.id)\r\n\r\n\tif (existingCartItem) {\r\n\t\tlet cartItem = cart.find((cartItem) => cartItem.id === cartItemToAdd.id)\r\n\t\tif (cartItem.quantity >= 10) {\r\n\t\t\tcartItem.quantity = cartItem.quantity\r\n\t\t} else {\r\n\t\t\tcartItem.quantity += 1\r\n\t\t}\r\n\t} else {\r\n\t\tcart = [...cart, { ...cartItemToAdd, quantity: 1 }]\r\n\t}\r\n\r\n\tlocalStorage.setItem('cart', JSON.stringify(cart))\r\n}\r\n\r\nexport const removeFromCart = (item) => {\r\n\tlet cart = JSON.parse(localStorage.getItem('cart') || '[]')\r\n\tlet existingCartItem = cart.some((cartItem) => cartItem.id === item.id)\r\n\r\n\tif (existingCartItem) {\r\n\t\tlet index = cart.findIndex((cartItem) => cartItem.id === item.id)\r\n\t\tcart.splice(index, 1)\r\n\t\tlocalStorage.setItem('cart', JSON.stringify(cart))\r\n\t}\r\n}\r\n\r\nexport const clearCart = () => {\r\n\tlocalStorage.removeItem('cart')\r\n}\r\n\r\nexport const decreaseQuantity = (item) => {\r\n\tlet cart = JSON.parse(localStorage.getItem('cart') || '[]')\r\n\tlet existingCartItem = cart.some((cartItem) => cartItem.id === item.id)\r\n\r\n\tif (existingCartItem) {\r\n\t\tlet cartItem = cart.find((cartItem) => cartItem.id === item.id)\r\n\r\n\t\tif (cartItem.quantity > 0) {\r\n\t\t\tcartItem.quantity -= 1\r\n\t\t} else {\r\n\t\t\tcartItem.quantity = 0\r\n\t\t}\r\n\t}\r\n\tlocalStorage.setItem('cart', JSON.stringify(cart))\r\n}\r\n\r\nexport const increaseQuantity = (item) => {\r\n\tlet cart = JSON.parse(localStorage.getItem('cart') || '[]')\r\n\tlet existingCartItem = cart.some((cartItem) => cartItem.id === item.id)\r\n\r\n\tif (existingCartItem) {\r\n\t\tlet cartItem = cart.find((cartItem) => cartItem.id === item.id)\r\n\r\n\t\tif (cartItem.quantity >= 10) {\r\n\t\t\tcartItem.quantity = cartItem.quantity\r\n\t\t} else {\r\n\t\t\tcartItem.quantity += 1\r\n\t\t}\r\n\t}\r\n\tlocalStorage.setItem('cart', JSON.stringify(cart))\r\n}\r\n\r\nexport const getQuantityOfOneItem = (item) => {\r\n\tlet cart = JSON.parse(localStorage.getItem('cart') || '[]')\r\n\tlet existingCartItem = cart.some((cartItem) => cartItem.id === item.id)\r\n\r\n\tif (existingCartItem) {\r\n\t\tlet cartItem = cart.find((cartItem) => cartItem.id === item.id)\r\n\t\treturn cartItem.quantity\r\n\t}\r\n}\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const ProductCard = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\t// flex-wrap: wrap;\r\n\twidth: 30%;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\t// margin: 60px;\r\n\t// flex-basis: 33.3333%;\r\n\tpadding: 100px 10px;\r\n\tflex: 1 1 auto;\r\n\tbackground-color: white;\r\n\r\n\t@media only screen and (max-width: 768px) {\r\n\t\twidth: 40%;\r\n\t}\r\n`\r\n\r\nexport const ProductImg = styled.img.attrs((props) => ({\r\n\tsrc: props.src,\r\n}))`\r\n\tdisplay: flex;\r\n\twidth: ${(props) => (props.width ? props.width : '140px')};\r\n\theight: 140px;\r\n`\r\n\r\nexport const ProductDetails = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tfont-size: 18px;\r\n\tcolor: grey;\r\n\tmargin: 20px 0;\r\n`\r\n\r\nexport const Title = styled.p`\r\n\tfont-size: 16px;\r\n`\r\n\r\nexport const AddToCartButton = styled.button`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\ttext-align: center;\r\n\toutline: none;\r\n\tmargin: ${(props) => (props.margin ? props.margin : '0px')};\r\n\tpadding: 18px 0px;\r\n\tbackground: #03adfc;\r\n\ttransition: all 0.4s ease-in-out;\r\n\tcolor: ${(props) => (props.color ? props.color : 'white')};\r\n\tfont-family: sans-serif;\r\n\tfont-size: ${(props) => (props.fontSize ? props.fontSize : '14px')};\r\n\tword-spacing: 1px;\r\n\tborder: 1px solid #03adfc;\r\n\tborder-radius: 4px;\r\n\twidth: 180px;\r\n\r\n\t&:focus,\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: #0c7bc4;\r\n\t\tborder: 1px solid #0c7bc4;\r\n\t}\r\n`\r\n","import React from 'react'\r\n\r\nimport { addItemToCart } from '../../utils/cart'\r\nimport { ProductCard, ProductImg, ProductDetails, Title, AddToCartButton } from './productsStyles'\r\n\r\nconst Product = ({ product, toggle }) => {\r\n\tconst handleCartButton = (product) => {\r\n\t\taddItemToCart(product)\r\n\t\ttoggle()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ProductCard key={product.id}>\r\n\t\t\t<ProductImg src={product.image} />\r\n\t\t\t<ProductDetails>\r\n\t\t\t\t<Title>{product.title}</Title>\r\n\t\t\t\tFrom ${product.price}\r\n\t\t\t</ProductDetails>\r\n\r\n\t\t\t<AddToCartButton\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\thandleCartButton(product)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tAdd to Cart\r\n\t\t\t</AddToCartButton>\r\n\t\t</ProductCard>\r\n\t)\r\n}\r\n\r\nexport default Product\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { ProductsContext } from '../ProductsContext'\r\nimport Product from './index'\r\n\r\nconst ProductDisplay = styled.div`\r\n\t// width: 100vw;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: space-between;\r\n\talign-items: left;\r\n\tmargin: 20px;\r\n`\r\n\r\nconst Products = ({ toggle }) => {\r\n\tconst [appState, setAppState] = useContext(ProductsContext)\r\n\r\n\treturn (\r\n\t\t<ProductDisplay>\r\n\t\t\t{appState.products &&\r\n\t\t\t\tappState.products.map((product) => (\r\n\t\t\t\t\t<Product key={product.id} product={product} toggle={toggle} />\r\n\t\t\t\t))}\r\n\t\t</ProductDisplay>\r\n\t)\r\n}\r\n\r\nexport default Products\r\n","import React from 'react'\r\n\r\nexport default function ReactPayPal(props) {\r\n\tconst [paid, setPaid] = React.useState(false)\r\n\tconst [error, setError] = React.useState(null)\r\n\tconst paypalRef = React.useRef()\r\n\tconst { cart } = props\r\n\tconsole.log(cart)\r\n\r\n\t// To show PayPal buttons once the component loads\r\n\tReact.useEffect(() => {\r\n\t\twindow.paypal\r\n\t\t\t.Buttons({\r\n\t\t\t\tcreateOrder: (data, actions) => {\r\n\t\t\t\t\treturn actions.order.create({\r\n\t\t\t\t\t\tintent: 'CAPTURE',\r\n\t\t\t\t\t\tpurchase_units: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdescription: 'Your description',\r\n\t\t\t\t\t\t\t\tamount: {\r\n\t\t\t\t\t\t\t\t\tcurrency_code: 'USD',\r\n\t\t\t\t\t\t\t\t\tvalue: cart.cartTotal,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t})\r\n\t\t\t\t},\r\n\t\t\t\tonApprove: async (data, actions) => {\r\n\t\t\t\t\tconst order = await actions.order.capture()\r\n\t\t\t\t\tsetPaid(true)\r\n\t\t\t\t\tconsole.log(order)\r\n\t\t\t\t},\r\n\t\t\t\tonError: (err) => {\r\n\t\t\t\t\t//   setError(err),\r\n\t\t\t\t\tconsole.error(err)\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.render(paypalRef.current)\r\n\t}, [])\r\n\r\n\t// If the payment has been made\r\n\tif (paid) {\r\n\t\treturn <div>Payment successful.!</div>\r\n\t}\r\n\r\n\t// If any error occurs\r\n\tif (error) {\r\n\t\treturn <div>Error Occurred in processing payment.! Please try again.</div>\r\n\t}\r\n\r\n\t// Default Render\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tzIndex: '200',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: 'column',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t\tmargin: '80px, 0px',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<h4>Total Amount in USD : {cart.cartTotal}</h4>\r\n\t\t\t<div ref={paypalRef} />\r\n\t\t</div>\r\n\t)\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n\tz-index: 10;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tbackground-color: rgba(0, 0, 0, 0.5);\r\n\t// background-color: rgba(219, 219, 217, 0.3);\r\n`\r\n\r\nexport const Modal = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 40%;\r\n\tpadding: 30px;\r\n\tbackground-color: #f2f2ef;\r\n\theight: 100vh;\r\n\tz-index: 20;\r\n\tjustify-content: flex-end;\r\n\talign-items: space-between;\r\n\tposition: fixed;\r\n\toverflow-x: hidden;\r\n\toverflow-y: auto;\r\n\ttop: 0;\r\n\tright: 0;\r\n\r\n\t@media only screen and (max-width: 768px) {\r\n\t\twidth: 80%;\r\n\t}\r\n`\r\n\r\nexport const CloseButton = styled.button`\r\n\tfont-size: 16px;\r\n\tfont-weight: 500;\r\n\tcolor: grey;\r\n\tborder: 1px solid grey;\r\n\tborder-radius: 15px;\r\n\tmargin: 20px 0px;\r\n\r\n\t&:focus,\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n`\r\n\r\nexport const ClearCartBtn = styled.div`\r\n\tfont-size: 16px;\r\n\tfont-weight: 500;\r\n\tcolor: ${(props) => (props.color ? props.color : 'white')};\r\n\tborder: 1px solid grey;\r\n\tborder-radius: 4px;\r\n\tmargin: 20px 0px;\r\n\tpadding: 10px;\r\n\tbackground-color: teal;\r\n\twidth: 100px;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\t&:focus,\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n`\r\n\r\nexport const TopRow = styled.div`\r\n\tfont-size: 16px;\r\n\tfont-weight: 500;\r\n\tcolor: grey;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n`\r\n\r\nexport const PriceTag = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n\tfont-size: 20px;\r\n\tfont-weight: 500;\r\n\t// margin: 30px 0px;\r\n\tborder-top: 2px solid grey;\r\n\t// border-bottom: 2px solid grey;\r\n`\r\n\r\nexport const CheckoutBtn = styled.div`\r\n\tfont-size: 16px;\r\n\tfont-weight: 500;\r\n\tcolor: white;\r\n\tborder: 1px solid ${(props) => (props.color ? props.color : '#6b73f3')};\r\n\tborder-radius: 4px;\r\n\tmargin: 20px 0px;\r\n\tpadding: 15px;\r\n\tbackground-color: ${(props) => (props.color ? props.color : '#6b73f3')};\r\n\t// width: 100px;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tmargin: 10px 0px;\r\n\r\n\t&:focus,\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n`\r\n\r\nexport const EmptyCart = styled.div`\r\n\tpadding: 30px;\r\n\tfont-size: 20px;\r\n\tcolor: grey;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tmargin: 80px 0px;\r\n`\r\n\r\nexport const CartCard = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\t// flex-wrap: wrap;\r\n\twidth: 450px;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tmargin: 20px;\r\n\tpadding: 10px 20px;\r\n\tbackground-color: white;\r\n`\r\n\r\nexport const CartImg = styled.img.attrs((props) => ({\r\n\tsrc: props.src,\r\n}))`\r\n\tdisplay: flex;\r\n\twidth: ${(props) => (props.width ? props.width : '40px')};\r\n\theight: 40px;\r\n`\r\n\r\nexport const LeftSideCartBox = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: space-between;\r\n\talign-items: left;\r\n\tfont-size: 12px;\r\n\tcolor: #747d7a;\r\n\tmargin: 20px 0;\r\n\twidth: 180px;\r\n\t// height: auto;\r\n\t// background-color: red;\r\n`\r\n\r\nexport const Title = styled.p`\r\n\tfont-size: 16px;\r\n`\r\n\r\nexport const QuantityChanger = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tborder: 1px solid grey;\r\n\tborder-radius: 3px;\r\n\twidth: 60px;\r\n\theight: 22px;\r\n\tpadding: 7px;\r\n`\r\nexport const QuantityOperator = styled.a`\r\n\tfont-weight: bold;\r\n\r\n\t&:focus,\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t\tcolor: red;\r\n\t}\r\n`\r\n\r\nexport const Price = styled.div`\r\n\tcolor: grey;\r\n\tfont-size: 18px;\r\n\tpadding: 5px;\r\n`\r\n\r\nexport const RemoveItemIcon = styled.a`\r\n\tdisplay: flex;\r\n\tjustify-content: flex-start;\r\n\talign-items: flex-start;\r\n\tcolor: grey;\r\n\r\n\t&:focus,\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t\tcolor: black;\r\n\t}\r\n`\r\n","import React, { useState } from 'react'\r\n\r\nimport { increaseQuantity, decreaseQuantity } from '../../utils/cart'\r\nimport {\r\n\tCartCard,\r\n\tLeftSideCartBox,\r\n\tTitle,\r\n\tQuantityChanger,\r\n\tQuantityOperator,\r\n\tPrice,\r\n\tCartImg,\r\n\tRemoveItemIcon,\r\n} from './cartStyles'\r\n\r\nconst Cart = ({ cartItem, handleRemove, handleCartChange }) => {\r\n\tlet [count, setcount] = useState(cartItem.quantity)\r\n\r\n\tconst handleIncrease = () => {\r\n\t\tif (count < 10) {\r\n\t\t\tsetcount(count + 1)\r\n\t\t} else {\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDecrease = () => {\r\n\t\tif (count > 0) {\r\n\t\t\tsetcount(count - 1)\r\n\t\t} else {\r\n\t\t\tcount = 0\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CartCard key={cartItem.id}>\r\n\t\t\t<LeftSideCartBox>\r\n\t\t\t\t<Title>{cartItem.title}</Title>\r\n\t\t\t\t<QuantityChanger>\r\n\t\t\t\t\t<QuantityOperator\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tdecreaseQuantity(cartItem)\r\n\t\t\t\t\t\t\thandleDecrease()\r\n\t\t\t\t\t\t\thandleCartChange()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t</QuantityOperator>\r\n\t\t\t\t\t<p>{count}</p>\r\n\t\t\t\t\t<QuantityOperator\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tincreaseQuantity(cartItem)\r\n\t\t\t\t\t\t\thandleIncrease()\r\n\t\t\t\t\t\t\thandleCartChange()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t+\r\n\t\t\t\t\t</QuantityOperator>\r\n\t\t\t\t</QuantityChanger>\r\n\t\t\t</LeftSideCartBox>\r\n\t\t\t<Price>${cartItem.price}</Price>\r\n\t\t\t<CartImg src={cartItem.image} />\r\n\t\t\t<RemoveItemIcon\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\thandleRemove()\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t&times;\r\n\t\t\t</RemoveItemIcon>\r\n\t\t</CartCard>\r\n\t)\r\n}\r\n\r\nexport default Cart\r\n","import React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport axios from 'axios'\r\n\r\nimport { getCart, removeFromCart, clearCart } from '../../utils/cart'\r\nimport ReactPayPal from '../PayPal'\r\n\r\nimport Cart from './index'\r\nimport {\r\n\tWrapper,\r\n\tModal,\r\n\tCloseButton,\r\n\tClearCartBtn,\r\n\tTopRow,\r\n\tPriceTag,\r\n\tCheckoutBtn,\r\n\tEmptyCart,\r\n} from './cartStyles'\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY)\r\n\r\nconst CartList = ({ isShown, hide }) => {\r\n\tconst [cart, setcart] = useState([])\r\n\tconst [checkout, setCheckout] = useState(false)\r\n\r\n\tconst dynamicModalClass = () => (isShown ? { display: 'block' } : '')\r\n\r\n\tuseEffect(() => {\r\n\t\tsetcart(getCart())\r\n\t}, [isShown]) //check this very well\r\n\r\n\tconst handleCartChange = () => {\r\n\t\tsetcart(getCart())\r\n\t}\r\n\r\n\tconst handleStripeBtnClick = async (cart) => {\r\n\t\t// Get Stripe.js instance\r\n\t\tconst stripe = await stripePromise\r\n\r\n\t\tconst api = 'https://interview-express-backend.herokuapp.com/create-checkout-session'\r\n\t\t// Call your backend to create the Checkout Session\r\n\t\tconst response = await axios.post(api, cart)\r\n\r\n\t\tconst session = await response.data\r\n\r\n\t\tclearCart()\r\n\t\talert('Wait! This takes a few seconds...')\r\n\r\n\t\t// When the customer clicks on the button, redirect them to Checkout.\r\n\t\tconst result = await stripe.redirectToCheckout({\r\n\t\t\tsessionId: session.id,\r\n\t\t})\r\n\r\n\t\tif (result.error) {\r\n\t\t\t// If `redirectToCheckout` fails due to a browser or network\r\n\t\t\t// error, display the localized error message to your customer\r\n\t\t\t// using `result.error.message`.\r\n\t\t}\r\n\t}\r\n\r\n\tconst handlePaypalBtnClick = async (cart) => {}\r\n\r\n\treturn isShown ? (\r\n\t\t<Wrapper>\r\n\t\t\t<Modal style={dynamicModalClass()}>\r\n\t\t\t\t{checkout === true ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<TopRow>\r\n\t\t\t\t\t\t\t<CloseButton\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetCheckout(false)\r\n\t\t\t\t\t\t\t\t\thide()\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t&times;\r\n\t\t\t\t\t\t\t</CloseButton>\r\n\t\t\t\t\t\t\t<p>Your Cart</p>\r\n\t\t\t\t\t\t</TopRow>\r\n\t\t\t\t\t\t<ReactPayPal cart={cart} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<TopRow>\r\n\t\t\t\t\t\t\t\t<CloseButton onClick={hide}>&times;</CloseButton>\r\n\t\t\t\t\t\t\t\t<p>Your Cart</p>\r\n\t\t\t\t\t\t\t</TopRow>\r\n\r\n\t\t\t\t\t\t\t{cart && cart.cartItems.length !== 0 && (\r\n\t\t\t\t\t\t\t\t<ClearCartBtn\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tclearCart()\r\n\t\t\t\t\t\t\t\t\t\thandleCartChange()\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tClear cart\r\n\t\t\t\t\t\t\t\t</ClearCartBtn>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{cart &&\r\n\t\t\t\t\t\t\t\tcart.cartItems.length !== 0 &&\r\n\t\t\t\t\t\t\t\tcart.cartItems.map((product) => (\r\n\t\t\t\t\t\t\t\t\t<Cart\r\n\t\t\t\t\t\t\t\t\t\tkey={product.id}\r\n\t\t\t\t\t\t\t\t\t\tcartItem={product}\r\n\t\t\t\t\t\t\t\t\t\thandleRemove={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tremoveFromCart(product)\r\n\t\t\t\t\t\t\t\t\t\t\thandleCartChange()\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\thandleCartChange={handleCartChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t{cart && cart.cartItems.length === 0 && <EmptyCart>Your cart is empty</EmptyCart>}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{cart && cart.cartItems.length !== 0 && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<PriceTag>\r\n\t\t\t\t\t\t\t\t\t\t<p>Total: </p>\r\n\t\t\t\t\t\t\t\t\t\t<p>${cart.cartTotal}</p>\r\n\t\t\t\t\t\t\t\t\t</PriceTag>\r\n\t\t\t\t\t\t\t\t\t<CheckoutBtn\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleStripeBtnClick(cart)\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCheckout with Stripe\r\n\t\t\t\t\t\t\t\t\t</CheckoutBtn>\r\n\t\t\t\t\t\t\t\t\t<CheckoutBtn\r\n\t\t\t\t\t\t\t\t\t\tcolor='#0070ba'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: '40px' }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetCheckout(true)\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCheckout with Paypal\r\n\t\t\t\t\t\t\t\t\t</CheckoutBtn>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{cart.cartItems.length === 0 && <div></div>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Modal>\r\n\t\t</Wrapper>\r\n\t) : null\r\n}\r\n\r\nexport default CartList\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst LoadingMessage = styled.div`\r\n\tfont-size: 20px;\r\n\tcolor: #7a7a7a;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-itmes: center;\r\n\tmargin: 80px 0px;\r\n`\r\n\r\nconst WithDataLoading = (Component) => {\r\n\treturn function WihLoadingComponent({ isLoading, ...props }) {\r\n\t\tif (!isLoading) return <Component {...props} />\r\n\t\treturn <LoadingMessage>...fetching products...</LoadingMessage>\r\n\t}\r\n}\r\n\r\nexport default WithDataLoading\r\n","import { useState } from 'react'\r\n\r\nconst useModal = () => {\r\n\tconst [isShown, setIsShown] = useState(false)\r\n\r\n\tfunction toggle() {\r\n\t\tsetIsShown(!isShown)\r\n\t}\r\n\r\n\treturn {\r\n\t\tisShown,\r\n\t\ttoggle,\r\n\t}\r\n}\r\n\r\n// use this in the display page...for products\r\n\r\nexport default useModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\n\r\nimport { ProductsProvider } from './components/ProductsContext'\r\nimport Products from './components/products/productsList'\r\nimport CartList from './components/cart/cartList'\r\nimport WithDataLoading from './components/withDataLoading'\r\nimport useModal from './components/useModal'\r\n\r\nconst CartIcon = styled.a`\r\n\tfont-size: 16px;\r\n\tcolor: #7a7a7a;\r\n\tdisplay: flex;\r\n\tjustify-content: flex-end;\r\n\tmargin: 30px;\r\n\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n`\r\n\r\nconst App = () => {\r\n\tconst { isShown, toggle } = useModal()\r\n\tconst ProductsLoading = WithDataLoading(Products)\r\n\tconst [appState, setAppState] = useState({\r\n\t\tloading: false,\r\n\t\tproducts: null,\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tsetAppState({ loading: true })\r\n\t\tconst api = `https://fakestoreapi.com/products`\r\n\r\n\t\taxios.get(api).then((productsList) => {\r\n\t\t\tsetAppState({ loading: false, products: productsList.data })\r\n\t\t})\r\n\r\n\t\t// }, [])\r\n\t}, [setAppState]) // which is correct??\r\n\r\n\treturn (\r\n\t\t<ProductsProvider>\r\n\t\t\t{appState.products && (\r\n\t\t\t\t<CartIcon\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\ttoggle()\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tSHOW CART\r\n\t\t\t\t</CartIcon>\r\n\t\t\t)}\r\n\r\n\t\t\t<ProductsLoading isLoading={appState.loading} toggle={toggle} />\r\n\t\t\t{/* <ProductsLoading isLoading={appState.loading} products={appState.products} toggle={toggle} /> */}\r\n\r\n\t\t\t<CartList isShown={isShown} hide={toggle} />\r\n\t\t</ProductsProvider>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './app.js'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<div>\n\t\t\t<h2>Products Page (Nav would go here...)</h2>\n\t\t</div>\n\t\t<App />\n\t</React.StrictMode>,\n\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}